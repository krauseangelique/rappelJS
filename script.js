// Votre console affichera beaucoup d'erreurs c'est tout √† fait normal si vous suivez l'ordre synchrone des exercices √† la fin vous ne devriez plus avoir d'erreur.

// Exercice 1 V
// Ins√©rez votre code ici
const firstname = "Bubulle";
const lastname = "XXXX";

// Ne touchez pas √† ceci
document.querySelector("h1").textContent = `Bonjour ${firstname} ${lastname}`;

// Exercice 2
// Ins√©rez votre code ici
let age = Number(32);

// Ne touchez pas √† ceci
document.querySelector(
  "p"
).textContent = `Tu t'appelles donc ${firstname} et tu as ${age} ans üòä si mes calculs sont justes tu es n√© en ${
  2023 - age
}`;
// Exercice 3
// Ins√©rez votre code ici
let year = Number(2023);
const birthYear = Number(year - age);

// Exercice 4
// Ins√©rez votre code ici
let user = [firstname, lastname, age, year, birthYear];
// Ne touchez pas √† ceci
user.forEach((infoUser) => {
  switch (infoUser) {
    case firstname:
      document.getElementById("firstname").textContent = `Salut ${firstname} !`;
      break;
    case lastname:
      document.getElementById(
        "lastname"
      ).textContent = `Bonjour Monsieur/Madame ${lastname} !`;
      break;
    case age:
      document.getElementById(
        "age"
      ).textContent = `Quel √¢ge as-tu ? ${age} ans`;
      break;
    case year:
      document.getElementById(
        "year"
      ).textContent = `On est toujours en ${year}`;
      break;
    case birthYear:
      document.getElementById(
        "birthYear"
      ).textContent = `Tu es donc n√© en ${birthYear}`;
      break;
    default:
      console.log("Oups il y a une erreur");
      break;
  }
});
// Exercice 5
// Ins√©rez votre code ici
/* Merci Sara
let colorLigthBlue = "lightblue";
let colorPink = "pink";
document.body.style.background = `linear-gradient(${colorPink}, ${colorLigthBlue})`;
*/
let backgroundColor = "crimson";
// Ne touchez pas √† ceci
document.body.style.backgroundColor = backgroundColor;

// Ins√©rez votre r√©assignation de backgroundColor ici
backgroundColor = "lightblue";

// Ne touchez pas √† ceci
document.body.style.backgroundColor = backgroundColor;

// Exercice 6
// Ins√©rez votre code ici
// Ins√©rer une image
let myImage = new Image(100, 200);
let car = {
  brand: "peogot",
  model: "403",
  yearConstruct: 1956,
  color: "lightblue",
  image: myImage.src = "./Ressources/images/128.jpg",
};
console.log(car);
// Ne touchez pas √† ceci
document.getElementById(
  "firstItem"
).textContent = `La marque de ta voiture : ${car.brand}`;
document.getElementById(
  "secondItem"
).textContent = `Le mod√®le de ta voiture : ${car.model}`;
document.getElementById(
  "thirdItem"
).textContent = `Ta voiture a √©t√© contruite en : ${car.yearConstruct}`;
document.getElementById(
  "fourthItem"
).textContent = `Ta voiture est de couleur : ${car.color}`;
document.getElementById("car").src = car.image;

// Exercice 7
// Ins√©rez votre code ici
// const matches = document.querySelectorAll("p");
const buttons = document.querySelectorAll("button");
console.log(buttons);
const cat = document.getElementById("cat");
console.log(cat); // <img id="cat" />

// Ne touche pas √† ceci
const catURL = [
  "https://s1.1zoom.me/big0/812/Cats_Glance_Kittens_558640_1280x720.jpg",
  "https://img3.wallspic.com/crops/4/8/6/4/94684/94684-chat_siberien-chat_siamois-chaton-chat_persan-chat-1280x720.jpg",
  "https://chatfaitdubien.fr/wp-content/uploads/2016/09/chaton.jpg",
];
buttons.forEach((btn) => {
  btn.addEventListener("click", () => {
    switch (btn.textContent) {
      case "Photo 1":
        cat.src = catURL[0];
        break;
      case "Photo 2":
        cat.src = catURL[1];
        break;
      case "Photo 3":
        cat.src = catURL[2];
        break;
      default:
        console.log("Erreur");
        break;
    }
  });
});

// Exercice 8
// Ins√©rez votre code ici
// S√©lectionnez l'√©l√©ment ayant l'ID "output" en utilisant getElementById() et ins√©rez deux nouvelles balises HTML avec innerHTML. Vous aurez besoin d'une balise "p" avec un contenu de votre choix et d'une balise "img" avec la source suivante : https://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/JavaScript-logo.png/800px-JavaScript-logo.png.

let output = document.getElementById("output");
console.log(output);
output.innerHTML += `<p>Hello mon p </p>
                      <img src=" https://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/JavaScript-logo.png/800px-JavaScript-logo.png" alt="JavaScript-logo" />`;

/*
Dans l'exercice TodoList
------------------------
 output.innerHTML += `<li>
    <p>${taskValue}</p>
    <div>
      <button class="done"></button>
      <button class="delete">
        Delete
      </button>
    </div>
  </li>`;
*/



// Exercice 9
// Ins√©rez votre code ici
const fruits = ["pomme", "poire", "cerise", "banane"];
const listOutput = document.getElementById("listOutput");
// user.forEach((infoUser) => {
  fruits.forEach((fruitValue) => {
      listOutput.innerHTML += ` <li> ${fruitValue} </li>
      `;
  });

// Exercice 10
// Vous allez rendre l'ic√¥ne affich√©e al√©atoire lorsque vous acc√©dez √† votre page.

// Ne touchez pas au tableau
const icons = [
  "cat-solid",
  "dog-solid",
  "dragon-solid",
  "fish-solid",
  "hippo-solid",
  "horse-solid",
  "otter-solid",
  "paw-solid",
  "shrimp-solid",
];

// Ins√©rez votre code ici
const logo = document.getElementById("logo");
// Pour √©viter de compter le nombre d'√©l√©ments de notre tableau, cr√©ez une variable contenant la longueur de votre tableau et soustrayez 1 (car l'index commence √† 0).
const indexIcons = (icons.length) -1;
console.log(indexIcons);

const aleatoire = Math.round(Math.random()*indexIcons);
console.log(aleatoire);
// images/chemin tableau valeur du tableau via son index
const iconURL = `./Ressources/images/${icons[aleatoire]}.svg`;
// document.getElementById("myImg").src = "hackanm.gif"; https://www.w3schools.com/jsref/prop_img_src.asp, https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_img_src2
//  <img id="logo" src="" alt="" /> la balise img dont l'id est logo va recevoir la source d'une image produite al√©atoirement
// pour l'id logo qui est stock√© dans la variable logo, je lui attribue l'icone url qui elle va chercher une image al√©atoirement : const iconURL = `./Ressources/images/${icons[aleatoire]}.svg`;
logo.src = iconURL;



// Exercice 11 : Optionnel
/*
  <div>
      <label for="iconSelect">Select an Icon:</label>
      <select id="iconSelect">
        <option value="">Select an icon...</option>
        <option value="cat-solid">Cat</option>
        <option value="shrimp-solid">Shrimp</option>
      </select>
      <button id="changeIcon">Change Icon</button>
    </div>
    <img id="iconImage" src="" alt="User's Icon" />
*/

// Ins√©rez votre code ici

/*
Exercice 11
Exercice optionnel

Pour cet exercice, nous allons r√©utiliser le tableau de l'exercice 10.
const icons = [
  "cat-solid",
  "dog-solid",
  "dragon-solid",
  "fish-solid",
  "hippo-solid",
  "horse-solid",
  "otter-solid",
  "paw-solid",
  "shrimp-solid",
];

Cette fois, l'objectif est de permettre √† l'utilisateur de choisir son ic√¥ne.

Dans le HTML, r√©cup√©rez plusieurs √©l√©ments en utilisant la m√©thode de votre choix. Enregistrez les IDs "iconSelect" (qui permet √† l'utilisateur de choisir dans un menu d√©roulant), "changeIcon" (qui permet de valider le choix) et "iconImage" (qui affichera l'ic√¥ne s√©lectionn√©e).
*/

const iconSelect = document.getElementById("iconSelect");
console.log(iconSelect);
const changeIcon = document.getElementById("changeIcon");
console.log(changeIcon);
const iconImage = document.getElementById("iconImage");
console.log(iconImage);

/*
Cr√©ez une fonction et affichez un message avec console.log() pour v√©rifier son bon fonctionnement. N'oubliez pas de l'appeler ensuite üòâ
*/
// l'utilisateur doit cliquer sur le button changeIcon pour d√©clencher la fonction
// dans la fonction cr√©er une variable contenant la "value" de l'√©l√©ment "iconSelect"
function modifierIcon(){
 // console.log("coucou");
 const selectIcon = iconSelect.value;
  // console.log(selectIcon);
  
  if (selectIcon) {
    // aller chercher dans la source l'image correspondante au clic
    iconImage.src = `./Ressources/images/${selectIcon}.svg`;
    
  }
}

changeIcon.addEventListener("click", () => {
 modifierIcon();
}) 

/*
Sous votre fonction, ajoutez un gestionnaire d'√©v√©nements de type "click". 

Devinez sur quel √©l√©ment l'utilisateur doit cliquer pour d√©clencher votre fonction. 

Rappelez-vous que la m√©thode addEventListener prend deux param√®tres : le type d'√©v√©nement √† √©couter et la fonction √† ex√©cuter. Si vous aviez appel√© votre fonction "normalement" √† l'√©tape pr√©c√©dente, supprimez cet appel, car il ne sera pas n√©cessaire.

Revenons √† votre fonction. Vous souhaitez que l'utilisateur puisse choisir. Vous avez d√©j√† effectu√© toutes vos s√©lections et appel√© la fonction.
Votre fonction n'accepte pas de param√®tre.
Cr√©ez une variable contenant la "value" de l'√©l√©ment "iconSelect".
Utilisez une condition "if" (sans le "else") bas√©e sur la valeur de la variable cr√©√©e √† l'√©tape pr√©c√©dente.
Si cette condition est vraie, cr√©ez une variable contenant le chemin/lien des images en utilisant la syntaxe des backticks. Int√©grez votre variable contenant la valeur de votre s√©lection.
Modifiez ensuite la source de votre ic√¥ne en utilisant cette nouvelle variable.

*/

